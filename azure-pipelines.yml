trigger:
  branches:
    include:
      - main       # This pipeline runs automatically whenever there is a commit to the "main" branch
      - develop
      - feature/*  # Matches branches like feature/new-ui, feature/fix-bug

variables:

  # Build.SourceBranchName only returns the last segment of a branch name,
  # and Build.SourceBranch returns a little to much, so we have to snipp that off
  # to get the pattern 'feature/branchname'
  BRANCH_NAME: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]
  
  # convert feature/testing-yml into a valid Docker tag format.
  SAFE_BRANCH_NAME: $[replace(variables['BRANCH_NAME'], '/', '-')]  # Replaces "/" with "-"

pool:
  name: 'D3VON-self-hosted-agent'  # This should match your agent pool name

steps:
- script: echo "Hello, Azure DevOps! Build triggered by GitHub commit."
  displayName: 'This is the displayName keys value.  I do not know what I would put here'

- task: Docker@2                        # Uses the Docker task in Azure DevOps to build and push images
  inputs:
    containerRegistry: 'd3vonregistry_service_connection'  # MISLEADING TAG NAME: this should be the service connection name of the Azure Container Registry. set up: In your DevOps project (D3VON), open Project Settings (extreme bottom left) -> Service connections, then I did Docker Registry...    
    repository: 'joes-robot-shop'       # Name of the container repository in ACR -- in the registry, search for 'repositories' for it to show up
    command: 'buildAndPush'             # Builds and pushes the Docker image to the registry
    Dockerfile: '**/Dockerfile'         # Path to the Dockerfile (in the root folder)
    tags: '$(Build.BuildId),$(SAFE_BRANCH_NAME),$(Build.SourceVersion)' # three tags given as a list
 
